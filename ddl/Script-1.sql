CREATE TABLE "EPSR"."MAINCOMP" (
	"MAINID" VARCHAR (20) NOT NULL, 
	"LOOKUPNAME" VARCHAR (100) NOT NULL, 
	"LOADORDER" INTEGER  NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE), 
	PRIMARY KEY ("MAINID")
	)
;

CREATE TABLE "EPSR"."DATAGROUPPATTERN" (
	"GROUPID" SMALLINT NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	PRIMARY KEY ("GROUPID", "HLQ", "TT", "MK", "PN") 
	)
;

CREATE INDEX EPSR.DATAGROUPPATTERN_1 ON EPSR.DATAGROUPPATTERN (
	GROUPID
);


CREATE TABLE "EPSR"."PNPPATTERN" (
	"HLQ" VARCHAR (15) NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"MAINID" VARCHAR (20) NOT NULL, 
	PRIMARY KEY ("MAINID", "HLQ", "TT", "MK", "PN"), 
	FOREIGN KEY ("MAINID") REFERENCES "EPSR"."MAINCOMP" ("MAINID") ON DELETE CASCADE ON UPDATE NO ACTION
	)
;

CREATE INDEX EPSR.PNPPATTERN_1 ON EPSR.PNPPATTERN (
	MAINID
	);

CREATE TABLE "EPSR"."PKGPATTERN" (
	"HLQ" VARCHAR (15) NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PK" VARCHAR (20) NOT NULL, 
	"MAINID" VARCHAR (20) NOT NULL, 
	PRIMARY KEY ("MAINID", "HLQ", "TT", "MK", "PN", "PK"), 
	FOREIGN KEY ("MAINID") REFERENCES "EPSR"."MAINCOMP" ("MAINID") ON DELETE CASCADE ON UPDATE NO ACTION
	)
;

CREATE INDEX EPSR.PKGPATTERN_1 ON EPSR.PKGPATTERN (
	MAINID
	);

CREATE TABLE "EPSR"."EPSRSITE" (
	"COMPID" VARCHAR (20) NOT NULL, 
	"LOOKUPNAME" VARCHAR (100) NOT NULL, 
	"DESCRIPTION" VARCHAR (200), 
	"USERNAME" VARCHAR (50) NOT NULL, 
	"PASSWORD" VARCHAR (32) FOR BIT DATA, 
	PRIMARY KEY ("COMPID")
	)
;

DROP TABLE "EPSR"."USERSESSION";
CREATE TABLE "EPSR"."USERSESSION" (
	"USERSESSIONID" INTEGER NOT NULL, 
	"USERNAME" VARCHAR (50) NOT NULL, 
	"USERROLE" SMALLINT NOT NULL, 
	"STARTTIME" TIMESTAMP, 
	"ENDTIME" TIMESTAMP, 
	"HOSTNAME" VARCHAR (50), 
	"HOSTADDR" VARCHAR (50), 
	PRIMARY KEY ("USERSESSIONID")
	)
;
ALTER TABLE "EPSR"."USERSESSION" ALTER COLUMN "USERSESSIONID" SET GENERATED ALWAYS AS IDENTITY;

CREATE TABLE "EPSR"."PNPACTION" (
	"PNPACTIONID" INTEGER  NOT NULL, 
	"USERSESSIONID" INTEGER NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"ACTIONTYPE" SMALLINT NOT NULL, 
	"ACTIONTIME" TIMESTAMP, 
	"ACTIONENDTIME" TIMESTAMP, 
	"CLIENTRETCODE" INTEGER, 
	PRIMARY KEY ("PNPACTIONID"), 
	FOREIGN KEY ("USERSESSIONID") REFERENCES "EPSR"."USERSESSION" ("USERSESSIONID") ON DELETE CASCADE ON UPDATE NO ACTION
	)
;
ALTER TABLE "EPSR"."PNPACTION" ALTER COLUMN "PNPACTIONID" SET GENERATED ALWAYS AS IDENTITY;
CREATE INDEX EPSR.PNPACTION_1 ON EPSR.PNPACTION (
	USERSESSIONID
	);


CREATE TABLE "EPSR"."PKGACTION" (
	"PKGACTIONID" INTEGER  NOT NULL, 
	"USERSESSIONID" INTEGER NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PK" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"ACTIONTYPE" SMALLINT NOT NULL, 
	"ACTIONTIME" TIMESTAMP, 
	"ACTIONENDTIME" TIMESTAMP, 
	"CLIENTRETCODE" INTEGER, 
	PRIMARY KEY ("PKGACTIONID"), 
	FOREIGN KEY ("USERSESSIONID") REFERENCES "EPSR"."USERSESSION" ("USERSESSIONID") ON DELETE CASCADE ON UPDATE NO ACTION
	)
;
ALTER TABLE "EPSR"."PKGACTION" ALTER COLUMN "PKGACTIONID" SET GENERATED ALWAYS AS IDENTITY;
CREATE INDEX EPSR.PKGACTION_1 ON EPSR.PKGACTION (
	USERSESSIONID
	);


CREATE TABLE "EPSR"."USERACCESSGROUPMNGMENTRY" (
	"HLQ" VARCHAR (15) NOT NULL, 
	"TT" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PK" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"USERNAME" VARCHAR (64) NOT NULL, 
	"PERMISSIONS" INTEGER NOT NULL, 
	"CREATIONTIME" TIMESTAMP NOT NULL, 
	"LASTACCESSEDTIME" TIMESTAMP, 
	PRIMARY KEY ("TT", "HLQ", "MK", "PN", "PK", "EC", "USERNAME")
	)
;

CREATE TABLE "EPSR"."PUBLISHPNP" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"TYPE" VARCHAR (20), 
	"SIZE" BIGINT, 
	"COMPRESSSIZE" BIGINT, 
	"DESCRIPTION" VARCHAR (256), 
	"CREATIONTIME" TIMESTAMP, 
	"MODIFICATIONTIME" TIMESTAMP, 
	"USERID" VARCHAR (64), 
	"PUBLISHSTATUS" INTEGER NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PN, EC)) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PUBLISHPKG" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PKG" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"TYPE" VARCHAR (20), 
	"SIZE" BIGINT, 
	"COMPRESSSIZE" BIGINT, 
	"DESCRIPTION" VARCHAR (256), 
	"CREATIONTIME" TIMESTAMP, 
	"MODIFICATIONTIME" TIMESTAMP, 
	"USERID" VARCHAR (64), 
	"PUBLISHSTATUS" INTEGER NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PN, PKG, EC)) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."TSMCOMP" (
	"TSMID" VARCHAR (20) NOT NULL, 
	"LOOKUPNAME" VARCHAR (100) NOT NULL, 
	"DESCRIPTION" VARCHAR (200), 
	PRIMARY KEY ("TSMID")
	)
;

CREATE TABLE "EPSR"."MAIN_TSM" (
	"MAINID" VARCHAR (20) NOT NULL, 
	"TSMID" VARCHAR (20) NOT NULL, 
	PRIMARY KEY ("MAINID"), 
	FOREIGN KEY ("MAINID") REFERENCES "EPSR"."MAINCOMP" ("MAINID") ON DELETE CASCADE ON UPDATE NO ACTION, 
	FOREIGN KEY ("TSMID") REFERENCES "EPSR"."TSMCOMP" ("TSMID") ON DELETE CASCADE ON UPDATE NO ACTION
	)
;
CREATE INDEX EPSR.MAIN_TSM_1 ON EPSR.MAIN_TSM (
	MAINID, TSMID
	);

CREATE TABLE "EPSR"."ITARHLQ" (
	"HLQ" VARCHAR (15) NOT NULL, 
	PRIMARY KEY ("HLQ")
	)
;

CREATE TABLE "EPSR"."USER" (
	"USERNAME" VARCHAR (50) NOT NULL, 
	"PASSWORD" VARCHAR (32) FOR BIT DATA, 
	"FIRSTNAME" VARCHAR (50), 
	"LASTNAME" VARCHAR (50), 
	"EMAILADDRESS" VARCHAR (50), 
	"AUTHORITIES" INTEGER NOT NULL WITH DEFAULT 0, 
	"LDAPSTATUS" INTEGER NOT NULL WITH DEFAULT 1, 
	"GROUPID" SMALLINT NOT NULL WITH DEFAULT 0, 
	PRIMARY KEY (USERNAME)) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."HLQADMIN" (
	"USERNAME" VARCHAR (50) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	PRIMARY KEY (USERNAME, HLQ), 
	FOREIGN KEY (USERNAME) REFERENCES "EPSR"."USER" (USERNAME) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PNP" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"TYPE" VARCHAR (20), 
	"FILES" INTEGER, 
	"SIZE" BIGINT, 
	"COMPRESSSIZE" BIGINT, 
	"STATUS" INTEGER NOT NULL, 
	"DESCRIPTION" VARCHAR (256), 
	"CREATIONTIME" TIMESTAMP, 
	"MODIFICATIONTIME" TIMESTAMP, 
	"USERID" VARCHAR (64), 
	PRIMARY KEY (TT, HLQ, MK, PN, EC)) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PKG" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PKG" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"TYPE" VARCHAR (20), 
	"FILES" INTEGER, 
	"SIZE" BIGINT, 
	"COMPRESSSIZE" BIGINT, 
	"STATUS" INTEGER NOT NULL, 
	"DESCRIPTION" VARCHAR (256), 
	"CREATIONTIME" TIMESTAMP, 
	"MODIFICATIONTIME" TIMESTAMP, 
	"USERID" VARCHAR (64), 
	PRIMARY KEY (TT, HLQ, MK, PN, PKG, EC)) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PNPFILE" (
	"FILENAME" VARCHAR (255) NOT NULL, 
	"FILELOCATION" VARCHAR (255) NOT NULL, 
	"STATUS" INTEGER NOT NULL, 
	"SIZE" BIGINT, 
	"COMPRESSSIZE" BIGINT, 
	"CHKSUM" BIGINT, 
	"TYPE" VARCHAR (20), 
	"COMPRESSED" SMALLINT, 
	"DESCRIPTION" VARCHAR (256), 
	"CREATIONTIME" TIMESTAMP, 
	"MODIFICATIONTIME" TIMESTAMP, 
	"USERID" VARCHAR (64), 
	PRIMARY KEY (FILENAME, FILELOCATION))
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PNP_PNPFILE" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"FILENAME" VARCHAR (255) NOT NULL, 
	"ORGFILENAME" VARCHAR (255) NOT NULL, 
	"FILELOCATION" VARCHAR (255) NOT NULL, 
	"FILENO" INTEGER NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PN, EC, ORGFILENAME, FILENO), 
	FOREIGN KEY (TT, HLQ, MK, PN, EC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION, 
	FOREIGN KEY (FILENAME, FILELOCATION) REFERENCES "EPSR"."PNPFILE" (FILENAME, FILELOCATION) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PKG_PNPFILE" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PKG" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"FILENAME" VARCHAR (255) NOT NULL, 
	"ORGFILENAME" VARCHAR (255) NOT NULL, 
	"FILELOCATION" VARCHAR (255) NOT NULL, 
	"FILENO" INTEGER NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PN, PKG, EC, ORGFILENAME, FILENO) , 
	FOREIGN KEY (TT, HLQ, MK, PN, PKG, EC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION, 
	FOREIGN KEY (FILENAME, FILELOCATION) REFERENCES "EPSR"."PNPFILE" (FILENAME, FILELOCATION) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PNP_PKG" (
	"PNPTT" VARCHAR (15) NOT NULL, 
	"PNPHLQ" VARCHAR (15) NOT NULL, 
	"PNPMK" VARCHAR (15) NOT NULL, 
	"PNPPN" VARCHAR (15) NOT NULL, 
	"PNPEC" VARCHAR (24) NOT NULL, 
	"PKGTT" VARCHAR (15) NOT NULL, 
	"PKGHLQ" VARCHAR (15) NOT NULL, 
	"PKGMK" VARCHAR (15) NOT NULL, 
	"PKGPN" VARCHAR (15) NOT NULL, 
	"PKGPKG" VARCHAR (20) NOT NULL, 
	"PKGEC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (PNPTT, PNPHLQ, PNPMK, PNPPN, PNPEC, PKGTT, PKGHLQ, PKGMK, PKGPN, PKGPKG, PKGEC), 
	FOREIGN KEY (PNPTT, PNPHLQ, PNPMK, PNPPN, PNPEC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION)
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PKG_PKG" (
	"PARENTTT" VARCHAR (15) NOT NULL, 
	"PARENTHLQ" VARCHAR (15) NOT NULL, 
	"PARENTMK" VARCHAR (15) NOT NULL, 
	"PARENTPN" VARCHAR (15) NOT NULL, 
	"PARENTPKG" VARCHAR (20) NOT NULL, 
	"PARENTEC" VARCHAR (24) NOT NULL, 
	"CHILDTT" VARCHAR (15) NOT NULL, 
	"CHILDHLQ" VARCHAR (15) NOT NULL, 
	"CHILDMK" VARCHAR (15) NOT NULL, 
	"CHILDPN" VARCHAR (15) NOT NULL, 
	"CHILDPKG" VARCHAR (20) NOT NULL, 
	"CHILDEC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (PARENTTT, PARENTHLQ, PARENTMK, PARENTPN, PARENTPKG, PARENTEC, CHILDTT, CHILDHLQ, CHILDMK, CHILDPN, CHILDPKG, CHILDEC), 
	FOREIGN KEY (PARENTTT, PARENTHLQ, PARENTMK, PARENTPN, PARENTPKG, PARENTEC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION)
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PNPREVISION" (
	"BASETT" VARCHAR (15) NOT NULL, 
	"BASEHLQ" VARCHAR (15) NOT NULL, 
	"BASEMK" VARCHAR (15) NOT NULL, 
	"BASEPN" VARCHAR (15) NOT NULL, 
	"BASEEC" VARCHAR (24) NOT NULL, 
	"REVTT" VARCHAR (15) NOT NULL, 
	"REVHLQ" VARCHAR (15) NOT NULL, 
	"REVMK" VARCHAR (15) NOT NULL, 
	"REVPN" VARCHAR (15) NOT NULL, 
	"REVEC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (BASETT, BASEHLQ, BASEMK, BASEPN, BASEEC, REVTT, REVHLQ, REVMK, REVPN, REVEC), 
	FOREIGN KEY (BASETT, BASEHLQ, BASEMK, BASEPN, BASEEC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION, 
	FOREIGN KEY (REVTT, REVHLQ, REVMK, REVPN, REVEC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PKGREVISION" (
	"BASETT" VARCHAR (15) NOT NULL, 
	"BASEHLQ" VARCHAR (15) NOT NULL, 
	"BASEMK" VARCHAR (15) NOT NULL, 
	"BASEPN" VARCHAR (15) NOT NULL, 
	"BASEPKG" VARCHAR (20) NOT NULL, 
	"BASEEC" VARCHAR (24) NOT NULL, 
	"REVTT" VARCHAR (15) NOT NULL, 
	"REVHLQ" VARCHAR (15) NOT NULL, 
	"REVMK" VARCHAR (15) NOT NULL, 
	"REVPN" VARCHAR (15) NOT NULL, 
	"REVPKG" VARCHAR (20) NOT NULL, 
	"REVEC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (BASETT, BASEHLQ, BASEMK, BASEPN, BASEPKG, BASEEC, REVTT, REVHLQ, REVMK, REVPN, REVPKG, REVEC), 
	FOREIGN KEY (BASETT, BASEHLQ, BASEMK, BASEPN, BASEPKG, BASEEC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION, 
	FOREIGN KEY (REVTT, REVHLQ, REVMK, REVPN, REVPKG, REVEC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."LASTPNP" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PN), 
	FOREIGN KEY (TT, HLQ, MK, PN, EC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."LASTPKG" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PKG" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	PRIMARY KEY (TT, HLQ, MK, PKG, PN), 
	FOREIGN KEY (TT, HLQ, MK, PN, PKG, EC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PUBLISHEDPNP" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"COMMENT" VARCHAR (256), 
	"PUBLISHTIME" TIMESTAMP, 
	"PUBLISHER" VARCHAR (64), 
	PRIMARY KEY (TT, HLQ, MK, PN, EC), 
	FOREIGN KEY (TT, HLQ, MK, PN, EC) REFERENCES "EPSR"."PNP" (TT, HLQ, MK, PN, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE TABLE "EPSR"."PUBLISHEDPKG" (
	"TT" VARCHAR (15) NOT NULL, 
	"HLQ" VARCHAR (15) NOT NULL, 
	"MK" VARCHAR (15) NOT NULL, 
	"PN" VARCHAR (15) NOT NULL, 
	"PKG" VARCHAR (20) NOT NULL, 
	"EC" VARCHAR (24) NOT NULL, 
	"COMMENT" VARCHAR (256), 
	"PUBLISHTIME" TIMESTAMP, 
	"PUBLISHER" VARCHAR (64), 
	PRIMARY KEY (TT, HLQ, MK, PN, PKG, EC), 
	FOREIGN KEY (TT, HLQ, MK, PN, PKG, EC) REFERENCES "EPSR"."PKG" (TT, HLQ, MK, PN, PKG, EC) ON DELETE CASCADE ON UPDATE NO ACTION) 
	DATA CAPTURE NONE;

CREATE INDEX EPSR.PNP_PNPFILE_1 ON EPSR.PNP_PNPFILE (
	TT, HLQ, MK, PN, EC
	);

CREATE INDEX EPSR.PNP_PNPFILE_2 ON EPSR.PNP_PNPFILE (
	FILENAME, FILELOCATION
	);

CREATE INDEX EPSR.PKG_PNPFILE_1 ON EPSR.PKG_PNPFILE (
	TT, HLQ, MK, PN, PKG, EC
	);

CREATE INDEX EPSR.PKG_PNPFILE_2 ON EPSR.PKG_PNPFILE (
	FILENAME, FILELOCATION
	);

CREATE INDEX EPSR.PNP_PKG_1 ON EPSR.PNP_PKG (
	PNPTT, PNPHLQ, PNPMK, PNPPN, PNPEC
	);

CREATE INDEX EPSR.PKG_PKG_1 ON EPSR.PKG_PKG (
	PARENTTT, PARENTHLQ, PARENTMK, PARENTPN, PARENTPKG, PARENTEC
	);

CREATE INDEX EPSR.PNPREVISION_1 ON EPSR.PNPREVISION (
	BASETT, BASEHLQ, BASEMK, BASEPN, BASEEC
	);

CREATE INDEX EPSR.PNPREVISION_2 ON EPSR.PNPREVISION (
	REVTT, REVHLQ, REVMK, REVPN, REVEC
	);

CREATE INDEX EPSR.PKGREVISION_1 ON EPSR.PKGREVISION (
	BASETT, BASEHLQ, BASEMK, BASEPN, BASEPKG, BASEEC
	);

CREATE INDEX EPSR.PKGREVISION_2 ON EPSR.PKGREVISION (
	REVTT, REVHLQ, REVMK, REVPN, REVPKG, REVEC
	);


insert into EPSR.USER (USERNAME, PASSWORD, AUTHORITIES, LDAPSTATUS) VALUES ('tung', ENCRYPT('123456', 'Ibm-Epsr'), 1, 0);

MERGE INTO USER_TOKEN
USING ( VALUES ('tung', 'asdfasdf') ) AS SOURCE(USER_ID, TOKEN)
ON USER_TOKEN.USER_ID = SOURCE.USER_ID
  WHEN MATCHED THEN UPDATE SET TOKEN = SOURCE.TOKEN
  WHEN NOT MATCHED THEN INSERT VALUES (SOURCE.USER_ID, SOURCE.TOKEN);
 
SELECT DISTINCT TT FROM PKG;

SELECT DISTINCT * FROM PKG WHERE 1 = 1;







